<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.mapper.StoreMapper">
	<insert id="registerStore" parameterType="store">
		INSERT INTO store VALUES (#{store_id},#{store_name},#{store_addr},#{store_license},#{store_member_id},#{store_time},#{store_introduce},#{store_tel},#{store_category},#{store_code},#{store_file},#{store_photo},#{store_count})
	</insert>
	<insert id="registerMenu" parameterType="menu">
		INSERT INTO store_menu VALUES (MENU_NO_SEQ.NEXTVAL,#{menu_store_id},#{menu_name},#{menu_price},#{menu_photo})
		<!-- INSERT INTO store_menu(menu_id,menu_store_id,menu_name,menu_price,menu_photo) 
		SELECT SEQ_MENU.nextval,'시익다앙_22','메뉴다',244,'' FROM DUAL WHERE NOT EXISTS
		(SELECT menu_id FROM store_menu WHERE menu_store_id = '시익다앙_22' AND menu_name = '메뉴다'); -->
	</insert>
	
	<select id="selectStoreDTO" parameterType="String" resultType="store">
		SELECT * FROM store WHERE store_id = #{store_id}
	</select>
	<select id="selectStoreID" parameterType="String" resultType="String">
		SELECT store_id FROM store WHERE store_member_id = #{member_id}
	</select>
	<select id="selectStoreListCode" parameterType="int" resultType="store">
		SELECT * FROM store WHERE store_code = #{store_code}
	</select>
	<select id="selectStoreMenuList" parameterType="String" resultType="menu">
		SELECT * FROM store_menu WHERE menu_store_id = #{store_id}
	</select>
	<select id="selectStoreListDetail" parameterType="HashMap" resultType="store">
		 select d.*, (SELECT COUNT(*) FROM review WHERE review_store_id = d.store_id) review_count from (select distinct menu_store_id from (select b.* from 
 (select store_id from store where store_addr LIKE #{addr} and store_code=1) a,store_menu b 
 where a.store_id=b.menu_store_id) where menu_name like #{search})c,store d where c.menu_store_id=d.store_id
	</select>
	<select id="selectStoreListBestScore" parameterType="int" resultType="store">
		<![CDATA[ SELECT s.* FROM store s,(SELECT ROWNUM, review_store_id,avg FROM( SELECT review_store_id,AVG(review_score_service+review_score_price+review_score_menu)/3 avg FROM review WHERE floor(SYSDATE - review_date) < ${day} GROUP BY review_store_id ORDER BY avg DESC)) re WHERE s.store_id = re.review_store_id AND ROWNUM <=4 ]]>
	</select>
	<select id="selectStoreListBestReviewCount" parameterType="int" resultType="store">
		<![CDATA[ SELECT * FROM  store WHERE store_id IN (SELECT review_store_id FROM (SELECT ROWNUM,re.* FROM 
		(SELECT review_store_id,COUNT(*) c FROM review WHERE floor(SYSDATE - review_date) < #{day} GROUP BY review_store_id ORDER BY c DESC)re)WHERE ROWNUM <=4) ]]>
	</select>
	
	<update id="updateStoreCode" parameterType="HashMap">
		UPDATE store SET store_code=#{store_code} WHERE store_id=#{store_id}
	</update>
	<update id="updateMenuPhoto" parameterType="HashMap">
		UPDATE store_menu SET menu_photo = #{menu_photo} WHERE menu_store_id=#{store_id} AND menu_name = #{menu_name}
	</update>
	
	<delete id="deleteStoreDTO" parameterType="String">
		DELETE FROM store WHERE store_id=#{store_id}
	</delete>
	<delete id="deleteMenu" parameterType="String">
		DELETE FROM store_menu WHERE menu_store_id = #{store_id}
	</delete>
	<select id="selectStoreReviewList" parameterType="String" resultType="review">
	select * from review where review_store_id=#{store_id}
	</select>
</mapper>