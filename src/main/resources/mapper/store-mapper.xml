<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.mapper.StoreMapper">
	<insert id="registerStore" parameterType="store">
		INSERT INTO store VALUES (#{store_id},#{store_name},#{store_addr},#{store_license},#{store_member_id},#{store_time},#{store_introduce},#{store_tel},#{store_category},#{store_code},#{store_file},#{store_photo},#{store_count})
	</insert>
	<insert id="registerMenu" parameterType="menu">
		INSERT INTO store_menu VALUES (MENU_NO_SEQ.NEXTVAL,#{menu_store_id},#{menu_name},#{menu_price},#{menu_photo})
	</insert>
	
	<select id="selectStoreDTO" parameterType="String" resultType="store">
		SELECT * FROM store WHERE store_id = #{store_id}
	</select>
	<select id="selectStoreID" parameterType="String" resultType="String">
		SELECT store_id FROM store WHERE store_member_id = #{member_id}
	</select>
	<select id="selectStoreListCode" parameterType="int" resultType="store">
		SELECT * FROM store WHERE store_code = #{store_code}
	</select>
	<select id="selectStoreMenuList" parameterType="String" resultType="menu">
		select * from store_menu where menu_store_id=#{store_id}
	</select>
	<select id="selectStoreMenuListWtihReview" parameterType="String" resultType="menu">
		select a.*,menu_score from store_menu a,(select trunc(avg(review_score_menu),1) as menu_score,menu_no from review,store_menu where review_menu_no=menu_no and review_store_id=#{store_id} group by menu_no) b where menu_store_id=#{store_id} and a.menu_no=b.menu_no
	</select>
	<select id="selectStoreDTODetail" parameterType="String" resultType="store">
		SELECT st.*, (SELECT TRUNC(NVL(AVG(s)/3+COUNT(s)*10,0),1) FROM (SELECT review_score_service+review_score_price+review_score_menu s,review.* FROM review) r 
		  WHERE r.review_store_id = st.store_id) review FROM store st WHERE store_id=#{store_id}
	</select>
	<select id="selectStoreListDetail" parameterType="HashMap" resultType="store">
		  select d.*, (SELECT TRUNC(NVL(AVG(s)/3+COUNT(s)*10,0),1) FROM (SELECT review_score_service+review_score_price+review_score_menu s,review.* FROM review) r 
		  WHERE r.review_store_id = d.store_id) review from (select distinct menu_store_id from (select b.* from 
 		(select store_id from store where store_addr LIKE  #{addr} and store_code=1) a,store_menu b 
 		where a.store_id=b.menu_store_id) where menu_name like #{search})c,store d where c.menu_store_id=d.store_id
	</select>
	<select id="selectStoreListBestScore" parameterType="int" resultType="store">
		<![CDATA[ SELECT s.* FROM store s,(SELECT ROWNUM, review_store_id,avg FROM 
		( SELECT review_store_id,AVG(review_score_service+review_score_price+review_score_menu)/3 avg FROM review WHERE floor(SYSDATE - review_date) < ${day} 
		GROUP BY review_store_id ORDER BY avg DESC)) re WHERE s.store_id = re.review_store_id AND s.store_code=1]]>
	</select>
	<select id="selectStoreListBestReviewCount" parameterType="int" resultType="store">
		<![CDATA[ SELECT * FROM  store WHERE store_code=1 AND store_id IN (SELECT review_store_id FROM (SELECT ROWNUM,re.* FROM 
		(SELECT review_store_id,COUNT(*) c FROM review WHERE floor(SYSDATE - review_date) < #{day} GROUP BY review_store_id ORDER BY c DESC)re)) ]]>
	</select>
	
	<update id="updateStoreCode" parameterType="HashMap">
		UPDATE store SET store_code=#{store_code} WHERE store_id=#{store_id}
	</update>
	<update id="updateMenuPhoto" parameterType="HashMap">
		UPDATE store_menu SET menu_photo = #{menu_photo} WHERE menu_store_id=#{store_id} AND menu_name = #{menu_name}
	</update>
	<update id="updateStoreCount" parameterType="String">
		UPDATE store SET store_count = store_count+1 WHERE store_id=#{store_id}		
	</update>
	
	<delete id="deleteStoreDTO" parameterType="String">
		DELETE FROM store WHERE store_id=#{store_id}
	</delete>
	<delete id="deleteMenu" parameterType="String">
		DELETE FROM store_menu WHERE menu_store_id = #{store_id}
	</delete>
	<select id="selectStoreReviewList" parameterType="String" resultType="review">
	select a.* from(select * from review r where review_store_id=#{store_id} order by review_date desc) a where rownum &lt;=5
	</select>
	<select id="selectStoreReviewListMore" parameterType="map" resultType="review">
	<![CDATA[ select a.* from(select * from review r where review_store_id=#{store_id} order by review_date desc) a where rownum <=5*#{no}]]>
	</select>
</mapper>