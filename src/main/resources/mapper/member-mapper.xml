<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.mapper.MemberMapper">
	<select id="loginMember" parameterType="map" resultType="member">
		select * from member where member_id=#{id} and member_pass=#{pass}
	</select>
	<select id="selectMemberAddress" parameterType="map" resultType="String">
		select address_text from member_address where address_member_id=#{id} and 
		address_status=#{address_status}
	</select>
	<select id="selectMember" parameterType="String" resultType="String">
	 select member_id from member where member_id=#{id}
	</select>
	<insert id="registerMember" parameterType="team.dto.MemberDTO">
	  insert into member values (#{member_id},#{member_pass},#{member_name},#{member_tel},#{member_grade},#{member_category},#{member_point})
	</insert>
	<insert id="registerMemberAddress" parameterType="team.dto.MemberAddressDTO">
	 insert into member_address values (#{address_Member_Id},#{address_Text},#{address_status})
	</insert>
	<select id="selectUserMessageList" parameterType="map" resultType="team.dto.MessageDTO">
select message_no,message_member_id,message_title,message_content,message_date,message_status from (select ceil(rownum/10) as page,message_no,message_member_id,message_title,message_content,message_date,message_status from (select message_no,message_member_id,message_title,message_content,message_date,message_status  from message where message_member_id=#{id,jdbcType=VARCHAR} order by message_status)) where page=#{pageNo} </select>
	<select id="selectUserMessage" parameterType="int" resultType="team.dto.MessageDTO">
	select * from message where message_no=#{no}
	</select>
	<update id="updateMessageStatus" parameterType="map">
	  update message set message_status=1 where message_no=#{no} and message_member_id=#{id} 
	</update>
	<delete id="deleteMessage" parameterType="map">
	  delete from message where message_no=#{no} and message_member_id=#{id}
	</delete>
	<select id="selectMessageCount" parameterType="String" resultType="int">
	 select count(*) from message where message_member_id=#{id}
	</select>
	<update id="memberUpdateAction" parameterType="team.dto.MemberDTO">
	update member set member_name=#{member_name},member_tel=#{member_tel},member_category=#{member_category} where member_id=#{member_id}
	</update>
	<select id="selectMemberAllAddress" parameterType="String" resultType="team.dto.MemberAddressDTO">
	   select * from member_address where address_member_id=#{id,jdbcType=VARCHAR} 
	</select>
	<delete id="deleteMemberAddress" parameterType="map">
	   delete from member_address where address_text=#{address} and address_member_id=#{id} and address_status not in(1)
	</delete>
		<update id="choiceMemberAddress" parameterType="map">
	   update member_address set address_status = 1 where address_text=#{address} and address_member_id=#{id}
	</update>
	<update id="notChoiceMemberAddress" parameterType="map">
	   update member_address set address_status = 0 where address_text not in(#{address}) and address_member_id=#{id}
	</update>
	<select id="selectMemeberAddressCheck" parameterType="map" resultType="String">
	  select address_text from member_address where address_text=#{address} and address_member_id=#{id}
	</select>
	<select id="selectMemberPassCheck" parameterType="map" resultType="team.dto.MemberDTO">
	   select * from member where member_id=#{id} and member_pass=#{pass}
	</select>
	<update id="updateMemberPass" parameterType="map">
	 update member set member_pass=#{pass} where member_id=#{id}
	</update>
	<insert id="adminNoticeWrite" parameterType="map">
	  insert into notice values (notice_no_seq.nextval,#{title},#{content},sysdate)
	</insert>
	<select id="selectAllNotice" parameterType="int" resultType="team.dto.NoticeDTO">
	  select notice_no,notice_title,notice_content,notice_date from (select ceil(rownum/20) as page,notice_no,notice_title,notice_content,notice_date from (select * from notice order by notice_date desc)) where page=#{pageNo}
	</select>
	<select id="selectNotice" parameterType="int" resultType="team.dto.NoticeDTO">
	 select * from notice where notice_no=#{notice_no}
	</select>
	<select id="selectNoticeCount" resultType="int">
	  select count(*) from notice
	</select>
	<delete id="adminNoticeDelete" parameterType="int">
	 delete from notice where notice_no=#{notice_no}
	</delete>
	<update id="adminNoticeUpdate" parameterType="map">
	  update notice set notice_title=#{notice_title},notice_content=#{notice_content},notice_date=sysdate where notice_no=#{notice_no}
	</update>
	<select id="adminSelectReportList" parameterType="int" resultType="review">
	  select review_no,review_member_id,review_store_id,review_content,review_date,review_score_service,review_score_price,review_score_menu,review_photo,review_report from (select ceil(rownum/10) as page,review_no,review_member_id,review_store_id,review_content,review_date,review_score_service,review_score_price,review_score_menu,review_photo,review_report from (select * from review where review_report=1 order by review_date desc)) where page=#{pageNo}
	</select>
	<select id="adminSelectReportCount" resultType="int" >
	 select count(*) from review where review_report=1
	</select>
	<select id="adminSelectReport" parameterType="int" resultType="review">
	 select review_no,review_member_id,review_store_id,review_content,review_photo from review where review_no=#{review_no}
	</select>
	<delete id="adminDeleteReportReview" parameterType="int">
	delete from review where review_no=#{review_no}
	</delete>
	<update id="adminCanselReportReview" parameterType="int">
	  update review set review_report=0 where review_no=#{review_no}
	</update>
	<insert id="sendMessage" parameterType="team.dto.MessageDTO">
	 insert into message values (message_no_seq.nextval,#{message_member_id},#{message_title},#{message_content},sysdate,0)
	 </insert>
	 <update id="updateMemberGrade" parameterType="HashMap">
	 	UPDATE member SET member_grade = #{grade} WHERE member_id = #{member_id}
	 </update>
	<insert id="registerReview" parameterType="review">
		INSERT INTO review(review_no,review_member_id,review_store_id,review_content,review_score_service,review_score_price,review_menu_no,review_score_menu,review_photo) VALUES(REVIEW_NO_SEQ.NEXTVAL,#{review_member_id},#{review_store_id},#{review_content},#{review_score_service},#{review_score_price},#{review_menu_no},#{review_score_menu},#{review_photo})
	</insert>
	<select id="selectWishlist" parameterType="String" resultType="team.dto.WishDTO">
		select * from wish_list where wish_list_member_id like #{member_id}
	</select>
	<select id="selectWishOne" parameterType="map" resultType="team.dto.WishDTO">
   select * FROM  wish_list where wish_list_store_id =#{store_id} and wish_list_member_id = #{member_id,jdbcType=VARCHAR}
   </select>
	<update id="businessReportAction" parameterType="int">
   update review set review_report=1 where review_no=#{review_no}
   </update>
	<insert id="insertWishList" parameterType="map">
	  insert into wish_list values (#{member_id},#{store_id})
	</insert>
	<delete id="deleteWishList" parameterType="map">
	 delete from wish_list where wish_list_member_id=#{member_id} and wish_list_store_id=#{store_id}
	</delete>
</mapper>
